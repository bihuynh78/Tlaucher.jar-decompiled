/*   */ package org.tlauncher.statistics;
/*   */ public class UniqueClientDTO { private String os; private String javaVersion; private String resolution; private double clientVersion; private String osVersion;
/*   */   private String uuid;
/*   */   
/* 5 */   public String getOs() { return this.os; } private String cpu; private String gpu; private int ramGpu; private int ram; private String processorArchitecture; private String bits; public String getJavaVersion() { return this.javaVersion; } public String getResolution() { return this.resolution; } public double getClientVersion() { return this.clientVersion; } public String getOsVersion() { return this.osVersion; } public String getUuid() { return this.uuid; } public String getCpu() { return this.cpu; } public String getGpu() { return this.gpu; } public int getRamGpu() { return this.ramGpu; } public int getRam() { return this.ram; } public String getProcessorArchitecture() { return this.processorArchitecture; } public String getBits() { return this.bits; } public void setOs(String os) { this.os = os; } public void setJavaVersion(String javaVersion) { this.javaVersion = javaVersion; } public void setResolution(String resolution) { this.resolution = resolution; } public void setClientVersion(double clientVersion) { this.clientVersion = clientVersion; } public void setOsVersion(String osVersion) { this.osVersion = osVersion; } public void setUuid(String uuid) { this.uuid = uuid; } public void setCpu(String cpu) { this.cpu = cpu; } public void setGpu(String gpu) { this.gpu = gpu; } public void setRamGpu(int ramGpu) { this.ramGpu = ramGpu; } public void setRam(int ram) { this.ram = ram; } public void setProcessorArchitecture(String processorArchitecture) { this.processorArchitecture = processorArchitecture; } public void setBits(String bits) { this.bits = bits; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof UniqueClientDTO)) return false;  UniqueClientDTO other = (UniqueClientDTO)o; if (!other.canEqual(this)) return false;  if (Double.compare(getClientVersion(), other.getClientVersion()) != 0) return false;  if (getRamGpu() != other.getRamGpu()) return false;  if (getRam() != other.getRam()) return false;  Object this$os = getOs(), other$os = other.getOs(); if ((this$os == null) ? (other$os != null) : !this$os.equals(other$os)) return false;  Object this$javaVersion = getJavaVersion(), other$javaVersion = other.getJavaVersion(); if ((this$javaVersion == null) ? (other$javaVersion != null) : !this$javaVersion.equals(other$javaVersion)) return false;  Object this$resolution = getResolution(), other$resolution = other.getResolution(); if ((this$resolution == null) ? (other$resolution != null) : !this$resolution.equals(other$resolution)) return false;  Object this$osVersion = getOsVersion(), other$osVersion = other.getOsVersion(); if ((this$osVersion == null) ? (other$osVersion != null) : !this$osVersion.equals(other$osVersion)) return false;  Object this$uuid = getUuid(), other$uuid = other.getUuid(); if ((this$uuid == null) ? (other$uuid != null) : !this$uuid.equals(other$uuid)) return false;  Object this$cpu = getCpu(), other$cpu = other.getCpu(); if ((this$cpu == null) ? (other$cpu != null) : !this$cpu.equals(other$cpu)) return false;  Object this$gpu = getGpu(), other$gpu = other.getGpu(); if ((this$gpu == null) ? (other$gpu != null) : !this$gpu.equals(other$gpu)) return false;  Object this$processorArchitecture = getProcessorArchitecture(), other$processorArchitecture = other.getProcessorArchitecture(); if ((this$processorArchitecture == null) ? (other$processorArchitecture != null) : !this$processorArchitecture.equals(other$processorArchitecture)) return false;  Object this$bits = getBits(), other$bits = other.getBits(); return !((this$bits == null) ? (other$bits != null) : !this$bits.equals(other$bits)); } protected boolean canEqual(Object other) { return other instanceof UniqueClientDTO; } public int hashCode() { int PRIME = 59; result = 1; long $clientVersion = Double.doubleToLongBits(getClientVersion()); result = result * 59 + (int)($clientVersion ^ $clientVersion >>> 32L); result = result * 59 + getRamGpu(); result = result * 59 + getRam(); Object $os = getOs(); result = result * 59 + (($os == null) ? 43 : $os.hashCode()); Object $javaVersion = getJavaVersion(); result = result * 59 + (($javaVersion == null) ? 43 : $javaVersion.hashCode()); Object $resolution = getResolution(); result = result * 59 + (($resolution == null) ? 43 : $resolution.hashCode()); Object $osVersion = getOsVersion(); result = result * 59 + (($osVersion == null) ? 43 : $osVersion.hashCode()); Object $uuid = getUuid(); result = result * 59 + (($uuid == null) ? 43 : $uuid.hashCode()); Object $cpu = getCpu(); result = result * 59 + (($cpu == null) ? 43 : $cpu.hashCode()); Object $gpu = getGpu(); result = result * 59 + (($gpu == null) ? 43 : $gpu.hashCode()); Object $processorArchitecture = getProcessorArchitecture(); result = result * 59 + (($processorArchitecture == null) ? 43 : $processorArchitecture.hashCode()); Object $bits = getBits(); return result * 59 + (($bits == null) ? 43 : $bits.hashCode()); } public String toString() { return "UniqueClientDTO(os=" + getOs() + ", javaVersion=" + getJavaVersion() + ", resolution=" + getResolution() + ", clientVersion=" + getClientVersion() + ", osVersion=" + getOsVersion() + ", uuid=" + getUuid() + ", cpu=" + getCpu() + ", gpu=" + getGpu() + ", ramGpu=" + getRamGpu() + ", ram=" + getRam() + ", processorArchitecture=" + getProcessorArchitecture() + ", bits=" + getBits() + ")"; }
/*   */    }


/* Location:              /home/khang/Downloads/tlaucher/Tlaucher.jar-decompiled/!/org/tlauncher/statistics/UniqueClientDTO.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */